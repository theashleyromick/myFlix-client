{"ast":null,"code":"import{useState,useEffect}from\"react\";import{MovieCard}from\"../movie-card/movie-card\";// Import MovieCard\nimport{MovieView}from\"../movie-view/movie-view\";// Import MovieView for detailed view\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const MainView=()=>{const[movies,setMovies]=useState([]);// Correct: Initialize with an empty array\nconst[selectedMovie,setSelectedMovie]=useState(null);// Fetch movies from the Open Library API\nuseEffect(()=>{second-branch;fetch(\"https://myflix-cf-2a89fc30fab2.herokuapp.com/movies\");fetch(\"https://myflix-cf-2a89fc30fab2.herokuapp.com/movies\");main.then(response=>response.json()).then(data=>{const moviesFromApi=data.docs.map(doc=>{var _doc$author_name;return{id:doc.key,// Use the correct key from the API response\ntitle:doc.title,image:`https://covers.openlibrary.org/b/id/${doc.cover_i}-L.jpg`,author:(_doc$author_name=doc.author_name)===null||_doc$author_name===void 0?void 0:_doc$author_name[0]// Use optional chaining in case author_name is undefined\n};});setMovies(moviesFromApi);// Correct: Set the state for movies\n}).catch(error=>{console.error('Error fetching movies:',error);});},[]);// Empty dependency array ensures useEffect runs only once\n// If a movie is selected, render MovieView\nif(selectedMovie){return/*#__PURE__*/_jsx(MovieView,{movie:selectedMovie,onBack:()=>setSelectedMovie(null)});}// Render MovieCard components for each movie\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"movie-list\",children:movies.map(movie=>/*#__PURE__*/_jsx(MovieCard,{movie:movie,onClick:()=>setSelectedMovie(movie)},movie.id))});};","map":{"version":3,"names":["useState","useEffect","MovieCard","MovieView","jsx","_jsx","MainView","movies","setMovies","selectedMovie","setSelectedMovie","second","branch","fetch","main","then","response","json","data","moviesFromApi","docs","map","doc","_doc$author_name","id","key","title","image","cover_i","author","author_name","catch","error","console","movie","onBack","className","children","onClick"],"sources":["C:/Users/ashle/Documents/myFlix-client/src/components/main-view/main-view.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { MovieCard } from \"../movie-card/movie-card\"; // Import MovieCard\r\nimport { MovieView } from \"../movie-view/movie-view\"; // Import MovieView for detailed view\r\n\r\nexport const MainView = () => {\r\n  const [movies, setMovies] = useState([]); // Correct: Initialize with an empty array\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n  // Fetch movies from the Open Library API\r\n  useEffect(() => {\r\nsecond-branch\r\n    fetch(\"https://myflix-cf-2a89fc30fab2.herokuapp.com/movies\")\r\n\r\n    fetch(\"https://myflix-cf-2a89fc30fab2.herokuapp.com/movies\")\r\n main\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const moviesFromApi = data.docs.map((doc) => {\r\n          return {\r\n            id: doc.key, // Use the correct key from the API response\r\n            title: doc.title,\r\n            image: `https://covers.openlibrary.org/b/id/${doc.cover_i}-L.jpg`,\r\n            author: doc.author_name?.[0] // Use optional chaining in case author_name is undefined\r\n          };\r\n        });\r\n\r\n        setMovies(moviesFromApi); // Correct: Set the state for movies\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching movies:', error);\r\n      });\r\n  }, []); // Empty dependency array ensures useEffect runs only once\r\n\r\n  // If a movie is selected, render MovieView\r\n  if (selectedMovie) {\r\n    return <MovieView movie={selectedMovie} onBack={() => setSelectedMovie(null)} />;\r\n  }\r\n\r\n  // Render MovieCard components for each movie\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies.map((movie) => (\r\n        <MovieCard key={movie.id} movie={movie} onClick={() => setSelectedMovie(movie)} />\r\n      ))}\r\n    </div>\r\n  );\r\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,SAAS,KAAQ,0BAA0B,CAAE;AACtD,OAASC,SAAS,KAAQ,0BAA0B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC1C,KAAM,CAACS,aAAa,CAAEC,gBAAgB,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAExD;AACAC,SAAS,CAAC,IAAM,CAClBU,MAAM,CAACC,MAAM,CACTC,KAAK,CAAC,qDAAqD,CAAC,CAE5DA,KAAK,CAAC,qDAAqD,CAAC,CAC/DC,IAAI,CACEC,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,EAAK,CACd,KAAM,CAAAC,aAAa,CAAGD,IAAI,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,EAAK,KAAAC,gBAAA,CAC3C,MAAO,CACLC,EAAE,CAAEF,GAAG,CAACG,GAAG,CAAE;AACbC,KAAK,CAAEJ,GAAG,CAACI,KAAK,CAChBC,KAAK,CAAE,uCAAuCL,GAAG,CAACM,OAAO,QAAQ,CACjEC,MAAM,EAAAN,gBAAA,CAAED,GAAG,CAACQ,WAAW,UAAAP,gBAAA,iBAAfA,gBAAA,CAAkB,CAAC,CAAE;AAC/B,CAAC,CACH,CAAC,CAAC,CAEFf,SAAS,CAACW,aAAa,CAAC,CAAE;AAC5B,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAAE;AAER;AACA,GAAIvB,aAAa,CAAE,CACjB,mBAAOJ,IAAA,CAACF,SAAS,EAAC+B,KAAK,CAAEzB,aAAc,CAAC0B,MAAM,CAAEA,CAAA,GAAMzB,gBAAgB,CAAC,IAAI,CAAE,CAAE,CAAC,CAClF,CAEA;AACA,mBACEL,IAAA,QAAK+B,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxB9B,MAAM,CAACc,GAAG,CAAEa,KAAK,eAChB7B,IAAA,CAACH,SAAS,EAAgBgC,KAAK,CAAEA,KAAM,CAACI,OAAO,CAAEA,CAAA,GAAM5B,gBAAgB,CAACwB,KAAK,CAAE,EAA/DA,KAAK,CAACV,EAA2D,CAClF,CAAC,CACC,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}